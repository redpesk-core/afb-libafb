/*
 * Copyright (C) 2015-2022 IoT.bzh Company
 * Author: Jos√© Bollo <jose.bollo@iot.bzh>
 *
 * $RP_BEGIN_LICENSE$
 * Commercial License Usage
 *  Licensees holding valid commercial IoT.bzh licenses may use this file in
 *  accordance with the commercial license agreement provided with the
 *  Software or, alternatively, in accordance with the terms contained in
 *  a written agreement between you and The IoT.bzh Company. For licensing terms
 *  and conditions see https://www.iot.bzh/terms-conditions. For further
 *  information use the contact form at https://www.iot.bzh/contact.
 *
 * GNU General Public License Usage
 *  Alternatively, this file may be used under the terms of the GNU General
 *  Public license version 3. This license is as published by the Free Software
 *  Foundation and appearing in the file LICENSE.GPLv3 included in the packaging
 *  of this file. Please review the following information to ensure the GNU
 *  General Public License requirements will be met
 *  https://www.gnu.org/licenses/gpl-3.0.html.
 * $RP_END_LICENSE$
 */

#pragma once

#if !defined(_GNU_SOURCE)
#  define _GNU_SOURCE
#endif

#define LIBAFB_VERSION_MAJOR   @PROJECT_VERSION_MAJOR@
#define LIBAFB_VERSION_MINOR   @PROJECT_VERSION_MINOR@
#define LIBAFB_VERSION_PATCH   @PROJECT_VERSION_PATCH@

#define LIBAFB_MAKE_VERSION(major,minor,patch) ((major) * 0x1000000 + (minor) * 0x10000 + (patch))
#define LIBAFB_VERSION         LIBAFB_MAKE_VERSION(LIBAFB_VERSION_MAJOR, LIBAFB_VERSION_MINOR, LIBAFB_VERSION_PATCH)
#define LIBAFB_BEFORE_VERSION(major,minor,patch) (LIBAFB_MAKE_VERSION(major,minor,patch) < LIBAFB_VERSION)
#define LIBAFB_AFTER_VERSION(major,minor,patch) (LIBAFB_MAKE_VERSION(major,minor,patch) >= LIBAFB_VERSION)

#cmakedefine01 WITH_SIG_MONITOR_DUMPSTACK
#cmakedefine01 WITH_SIG_MONITOR_SIGNALS
#cmakedefine01 WITH_SIG_MONITOR_FOR_CALL
#cmakedefine01 WITH_SIG_MONITOR_TIMERS
#cmakedefine01 WITH_AFB_HOOK
#cmakedefine01 WITH_AFB_TRACE
#cmakedefine01 WITH_DBUS_TRANSPARENCY
#cmakedefine01 WITH_SUPERVISION
#cmakedefine01 WITH_DYNAMIC_BINDING
#cmakedefine01 WITH_REPLY_JOB
#cmakedefine01 WITH_SYSTEMD
#cmakedefine01 WITH_LIBMICROHTTPD
#cmakedefine01 WITH_ENVIRONMENT
#cmakedefine01 WITH_AFB_DEBUG
#cmakedefine01 WITH_CALL_PERSONALITY
#cmakedefine01 WITH_AFB_CALL_SYNC
#cmakedefine01 WITH_FNMATCH
#cmakedefine01 WITH_L4VSOCK
#cmakedefine01 WITH_LIBUUID
#cmakedefine01 WITH_EPOLL
#cmakedefine01 WITH_EVENTFD
#cmakedefine01 WITH_FDEV_SYSTEMD
#cmakedefine01 WITH_FDEV_EPOLL
#cmakedefine01 WITH_FDEV_POLL
#cmakedefine01 WITH_FDEV_SELECT
#cmakedefine01 WITH_CLOCK_GETTIME
#cmakedefine01 WITH_RANDOM_R
#cmakedefine01 WITH_OPENAT
#cmakedefine01 WITH_DIRENT
#cmakedefine01 WITH_SYS_UIO
#cmakedefine01 WITH_LOCALE_FOLDER
#cmakedefine01 WITH_LOCALE_SEARCH_NODE
#cmakedefine01 WITH_WSCLIENT_URI_COPY
#cmakedefine01 WITH_REALPATH
#cmakedefine01 WITH_CRED
#cmakedefine01 WITH_UNIX_SOCKET
#cmakedefine01 WITH_THREAD_LOCAL
#cmakedefine01 WITH_API_SESSIONS
#cmakedefine01 WITH_API_CREATOR
#cmakedefine01 WITH_REQ_PROCESS_ASYNC
#cmakedefine01 WITH_CASE_FOLDING
#cmakedefine01 WITH_EXTENSION
#cmakedefine01 WITH_GNUTLS

#if WITH_LIBMICROHTTPD
/* Always add INFER_EXTENSION (more details in afb-hreq.c) */
#  define INFER_EXTENSION 1
#  cmakedefine01 HAVE_LIBMAGIC
#endif
#if !WITH_AFB_HOOK && WITH_AFB_TRACE
#  undef WITH_AFB_TRACE
#  define WITH_AFB_TRACE 0
#endif

